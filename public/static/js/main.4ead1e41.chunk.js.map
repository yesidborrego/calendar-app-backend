{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/convertDateEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","actions/ui.js","helpers/calendar-lang-es.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/ui/Navbar.js","components/calendar/CalendarEvent.js","components/calendar/CalendarModal.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseURL","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","types","convertDateEvents","events","map","e","start","moment","toDate","end","eventAddNew","event","type","payload","eventUpdated","eventDeleted","eventClearActive","eventLoaded","login","user","authCheckingFinish","startLogout","dispatch","clear","logout","useForm","inputs","useState","formValues","setFormValues","handleInputChange","target","name","value","clearInputs","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword","rPassword_confirm","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","res","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","uiOpenModal","calendarLangEs","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","AddNewFab","onClick","DeleteEventFab","getState","id","calendar","activeEvent","console","error","Navbar","useSelector","state","auth","CalendarEvent","title","customStyles","content","top","left","right","bottom","marginRight","transform","eventStart","minutes","seconds","add","eventEnd","clone","Modal","setAppElement","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","validTitle","setValidTitle","openModal","ui","closeModal","useEffect","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","icon","text","trim","length","evento","_id","eventStartAddNew","minDate","autoComplete","rows","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","log","startAccessor","endAccessor","messages","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","color","display","onDoubleClickEvent","onSelectEvent","onSelectSlot","selectable","onView","view","components","PrivateRoute","isLogged","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","initialState","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4ead1e41.chunk.js","sourcesContent":["const baseURL = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchWithoutToken = ( endpoint, data, method = 'GET') => {\r\n  const url = `${baseURL}${endpoint}`;\r\n\r\n  switch (method) {\r\n    case 'GET':\r\n      return fetch(url);\r\n\r\n    case 'POST':\r\n      return fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n      })\r\n\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nconst fetchWithToken = ( endpoint, data, method = 'GET') => {\r\n  const url = `${baseURL}${endpoint}`;\r\n  const token = localStorage.getItem('token') || '';\r\n\r\n  if(method === 'GET'){\r\n    return fetch(url, {\r\n        method,\r\n        headers: {\r\n          'x-token': token\r\n        }\r\n      });\r\n  } else {\r\n    return fetch(url, {\r\n      method,\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'x-token': token\r\n      },\r\n      body: JSON.stringify(data)\r\n    });\r\n  }\r\n}\r\n\r\nexport {\r\n  fetchWithoutToken,\r\n  fetchWithToken\r\n}","export const types = {\r\n  uiOpenModal: '[ui] Open modal',\r\n  uiCloseModal: '[ui] Close modal',\r\n\r\n  eventSetActive: '[event] Set active',\r\n  eventClearActive: '[event] Clear event active',\r\n  eventStartAddNew: '[event] Start add new event',\r\n  eventAddNew: '[event] Add new',\r\n  eventUpdated: '[event] Updated event',\r\n  eventDeleted: '[event] Deleted event',\r\n  eventStartLoad: '[event] Start load events',\r\n  eventClearState: '[event] Clear state',\r\n\r\n  authCheckingFinish: '[auth] Finish checking login state',\r\n  authStartLogin: '[auth] Start login',\r\n  authLogin: '[auth] Login',\r\n  authStartRegister: '[auth] Start register',\r\n  authStartTokenRenew: '[auth] Start token renew',\r\n  authLogout: '[auth] Logout',\r\n\r\n}","import moment from 'moment';\r\n\r\nexport const convertDateEvents = ( events = [] ) => {\r\n  return events.map( e => (\r\n    {\r\n      ...e,\r\n      start: moment(e.start).toDate(),\r\n      end: moment(e.end).toDate(),\r\n    }\r\n  ));\r\n}\r\n","import Swal from \"sweetalert2\";\r\n\r\nimport { convertDateEvents } from \"../helpers/convertDateEvents\";\r\nimport { fetchWithToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventSetActive = (event) => (\r\n  {\r\n    type: types.eventSetActive,\r\n    payload: event\r\n  }\r\n);\r\n\r\nexport const eventStartAddNew = (event) => {\r\n  return async (dispatch, getState) => {\r\n    const { uid, name } = getState().auth;\r\n\r\n    try {\r\n      const res = await fetchWithToken('events', event, 'POST');\r\n      const body = await res.json();\r\n\r\n      event.id = body.evento.id;\r\n      event.user = {\r\n        _id: uid,\r\n        name\r\n      };\r\n\r\n      dispatch(eventAddNew(event));\r\n\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n}\r\n\r\nconst eventAddNew = (event) => (\r\n  {\r\n    type: types.eventAddNew,\r\n    payload: event\r\n  }\r\n);\r\n\r\nexport const eventStartUpdate = (event) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await fetchWithToken(`events/${event.id}`, event, 'PUT');\r\n      const body = await res.json();\r\n\r\n      if(body.ok) {\r\n        dispatch(eventUpdated(event));\r\n      } else {\r\n        Swal.fire('Error', body.msg, 'error');\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n}\r\n\r\nconst eventUpdated = (event) => (\r\n  {\r\n    type: types.eventUpdated,\r\n    payload: event\r\n  }\r\n);\r\n\r\nexport const eventStartDelete = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const { id } = getState().calendar.activeEvent;\r\n      const res = await fetchWithToken(`events/${id}`, {}, 'DELETE');\r\n      const body = await res.json();\r\n      if(body.ok) {\r\n        dispatch(eventDeleted());\r\n      } else {\r\n        Swal.fire('Error', body.msg, 'error');\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n}\r\n\r\nconst eventDeleted = () => (\r\n  {\r\n    type: types.eventDeleted,\r\n  }\r\n);\r\n\r\nexport const eventClearActive = () => (\r\n  {\r\n    type: types.eventClearActive,\r\n  }\r\n);\r\n\r\nexport const eventStartLoad = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await fetchWithToken('events');\r\n      const body = await res.json();\r\n\r\n      const events = convertDateEvents(body.events);\r\n      dispatch(eventLoaded(events));\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n}\r\n\r\nconst eventLoaded = (events) => (\r\n  {\r\n    type: types.eventStartLoad,\r\n    payload: events\r\n  }\r\n)\r\n\r\nexport const eventClearState = () => (\r\n  {\r\n    type: types.eventClearState\r\n  }\r\n)","import Swal from \"sweetalert2\";\r\n\r\nimport { fetchWithoutToken, fetchWithToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventClearState } from \"./events\";\r\n\r\nexport const startLogin = (email, password) => {\r\n  return async ( dispatch ) => {\r\n    const res = await fetchWithoutToken('auth', {email, password}, 'POST');\r\n    const body = await res.json();\r\n\r\n    if( body.ok ) {\r\n      localStorage.setItem('token', body.token);\r\n      localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n      dispatch(login({ uid: body.uid, name: body.name }));\r\n    } else {\r\n      Swal.fire('Error', body.msg, 'error');\r\n    }\r\n  }\r\n}\r\n\r\nexport const startRegister = (email, password, name) => {\r\n  return async (dispatch) => {\r\n    const res = await fetchWithoutToken('auth/new', {email, password, name}, 'POST');\r\n    const body = await res.json();\r\n\r\n    if( body.ok ) {\r\n      localStorage.setItem('token', body.token);\r\n      localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n      dispatch(login({ uid: body.uid, name: body.name }));\r\n    } else {\r\n      Swal.fire('Error', body.msg, 'error');\r\n    }\r\n  }\r\n}\r\n\r\nconst login = (user) => (\r\n  {\r\n    type: types.authLogin,\r\n    payload: user\r\n  }\r\n);\r\n\r\nexport const startTokenRenew = () => {\r\n  return async (dispatch) => {\r\n    const res = await fetchWithToken('auth/renew');\r\n    const body = await res.json();\r\n\r\n    if( body.ok ) {\r\n      localStorage.setItem('token', body.token);\r\n      localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n      dispatch(login({ uid: body.uid, name: body.name }));\r\n    } else {\r\n      dispatch(authCheckingFinish());\r\n    }\r\n  }\r\n}\r\n\r\nconst authCheckingFinish = () => ({\r\n  type: types.authStartTokenRenew\r\n})\r\n\r\nexport const startLogout = () => {\r\n  return (dispatch) => {\r\n    localStorage.clear();\r\n    dispatch(eventClearState());\r\n    dispatch(logout());\r\n  }\r\n}\r\n\r\nconst logout = () => (\r\n  {\r\n    type: types.authLogout\r\n  }\r\n);","import { useState } from \"react\";\n\nexport const useForm = (inputs = {}) => {\n  const [formValues, setFormValues] = useState(inputs);\n\n  const handleInputChange = ({ target }) => {\n    setFormValues({\n      ...formValues,\n      [target.name]: target.value\n    })\n  }\n\n  const clearInputs = () => {\n    setFormValues(inputs);\n  }\n\n  return [formValues, handleInputChange, clearInputs];\n}\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm(\r\n        {\r\n            lEmail: 'isabella@test.com',\r\n            lPassword: '12345678'\r\n        }\r\n    );\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm(\r\n        {\r\n            rName: 'Vanesa',\r\n            rEmail: 'vanesa@test.com',\r\n            rPassword: '12345678',\r\n            rPassword_confirm: '12345678'\r\n        }\r\n    );\r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n    const { rName, rEmail, rPassword, rPassword_confirm } = formRegisterValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail, lPassword));\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        if(rPassword !== rPassword_confirm){\r\n            return Swal.fire('Error', 'Password and confirmation password must be the same', 'error');\r\n        }\r\n        dispatch(startRegister(rEmail, rPassword, rName));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={ lEmail }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={ lPassword }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={ rName }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={ rEmail }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"rPassword\"\r\n                                value={ rPassword }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"rPassword_confirm\"\r\n                                value={ rPassword_confirm }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { types } from \"../types/types\"\r\n\r\nexport const uiOpenModal = () => (\r\n  {\r\n    type: types.uiOpenModal\r\n  }\r\n)\r\n\r\nexport const uiCloseModal = () => (\r\n  {\r\n    type: types.uiCloseModal\r\n  }\r\n)","export const calendarLangEs = {\r\n  allDay: 'Todo el día',\r\n  previous: '<',\r\n  next: '>',\r\n  today: 'Hoy',\r\n  month: 'Mes',\r\n  week: 'Semana',\r\n  day: 'Día',\r\n  agenda: 'Agenda',\r\n  date: 'Fecha',\r\n  time: 'Hora',\r\n  event: 'Evento',\r\n  noEventsInRange: 'No hay eventos en este rango',\r\n  showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOpenModal = () => {\r\n    dispatch(uiOpenModal());\r\n  }\r\n\r\n  return (\r\n    <button\r\n      className=\"btn btn-primary fab\"\r\n      onClick={ handleOpenModal }\r\n    >\r\n      <i className=\"fas fa-plus\"></i>\r\n    </button>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDeleteEvent = () => {\r\n    dispatch(eventStartDelete());\r\n  }\r\n\r\n  return (\r\n    <button\r\n      className=\"btn btn-danger fab-danger\"\r\n      onClick={ handleDeleteEvent }\r\n    >\r\n      <i className=\"fas fa-trash\"></i>\r\n      <span> Borrar evento </span>\r\n    </button>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n  const dispatch = useDispatch();\r\n  const { name } = useSelector(state => state.auth);\r\n\r\n  const handleLogout = () => {\r\n    dispatch(startLogout());\r\n  }\r\n\r\n  return (\r\n    <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n      <span className=\"navbar-brand\">\r\n        { name }\r\n      </span>\r\n\r\n      <button\r\n        className=\"btn btn-outline-danger\"\r\n        onClick={ handleLogout }\r\n      >\r\n        <i className=\"fas fa-sign-out-alt mr-2\"></i>\r\n        <span>Salir</span>\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n  const {title, user} = event;\r\n\r\n  return (\r\n    <div>\r\n      <span>{ title }</span>\r\n      <strong> - { user.name }</strong>\r\n    </div>\r\n  )\r\n}\r\n","import moment from 'moment';\r\nimport React, { useEffect, useState } from 'react';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Modal from 'react-modal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Swal from 'sweetalert2'\r\n\r\nimport { eventClearActive, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\nimport { uiCloseModal } from '../../actions/ui';\r\n\r\nconst customStyles = {\r\n  content : {\r\n    top         : '50%',\r\n    left        : '50%',\r\n    right       : 'auto',\r\n    bottom      : 'auto',\r\n    marginRight : '-50%',\r\n    transform   : 'translate(-50%, -50%)'\r\n  }\r\n};\r\n\r\nconst eventStart = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst eventEnd = eventStart.clone().add(1, 'hours');\r\n\r\nModal.setAppElement('#root')\r\n\r\nconst initEvent = {\r\n  title: '',\r\n  notes: '',\r\n  start: eventStart.toDate(),\r\n  end: eventEnd.toDate()\r\n};\r\n\r\nexport const CalendarModal = () => {\r\n  const dispatch = useDispatch();\r\n  const [dateStart, setDateStart] = useState(eventStart.toDate());\r\n  const [dateEnd, setDateEnd] = useState(eventEnd.toDate());\r\n  const [formValues, setFormValues] = useState(initEvent);\r\n  const [validTitle, setValidTitle] = useState(true);\r\n  const { openModal } = useSelector(state => state.ui);\r\n  const { activeEvent } = useSelector(state => state.calendar);\r\n\r\n  const { title, notes, start, end } = formValues;\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [target.name]: target.value\r\n    });\r\n  }\r\n\r\n  const closeModal = () => {\r\n    dispatch(uiCloseModal());\r\n    setFormValues(initEvent);\r\n    dispatch(eventClearActive());\r\n  };\r\n\r\n  const handleStartDateChange = (e) => {\r\n    setDateStart(e);\r\n    setFormValues({\r\n      ...formValues,\r\n      start: e\r\n    });\r\n  }\r\n\r\n  const handleEndDateChange = (e) => {\r\n    setDateEnd(e);\r\n    setFormValues({\r\n      ...formValues,\r\n      end: e\r\n    });\r\n  }\r\n\r\n  const handleSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    const momentStart = moment(start);\r\n    const momentEnd = moment(end);\r\n    if(momentStart.isSameOrAfter(momentEnd)) {\r\n      return Swal.fire({\r\n        icon: 'error',\r\n        title: 'Oops...',\r\n        text: 'La fecha y hora fin debe ser mayor a la de inicio!',\r\n      })\r\n    }\r\n    if(title.trim().length <= 3) {\r\n      return setValidTitle(false);\r\n    }\r\n    setValidTitle(true);\r\n\r\n    if(activeEvent) {\r\n      dispatch(eventStartUpdate(formValues));\r\n    } else {\r\n      dispatch(eventStartAddNew(formValues));\r\n    }\r\n\r\n\r\n    closeModal();\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(activeEvent) {\r\n      setFormValues(activeEvent);\r\n    } else {\r\n      setFormValues(initEvent);\r\n    }\r\n  }, [activeEvent, setFormValues]);\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={ openModal }\r\n      onRequestClose={ closeModal }\r\n      style={ customStyles }\r\n      closeTimeoutMS={ 200 }\r\n      className=\"modal\"\r\n      overlayClassName=\"modal-fondo\"\r\n    >\r\n      <h1>\r\n        {\r\n          (activeEvent) ? 'Editar evento' : 'Nuevo evento'\r\n        }\r\n      </h1>\r\n      <hr />\r\n      <form\r\n        className=\"container\"\r\n        onSubmit={ handleSubmitForm }\r\n      >\r\n          <div className=\"form-group\">\r\n              <label>Fecha y hora inicio</label>\r\n              <DateTimePicker\r\n                onChange={ handleStartDateChange }\r\n                value={ dateStart }\r\n                className=\"form-control\"\r\n              />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n              <label>Fecha y hora fin</label>\r\n              <DateTimePicker\r\n                onChange={ handleEndDateChange }\r\n                value={ dateEnd }\r\n                className=\"form-control\"\r\n                minDate={ dateStart }\r\n              />\r\n          </div>\r\n\r\n          <hr />\r\n          <div className=\"form-group\">\r\n              <label>Titulo y notas</label>\r\n              <input\r\n                  type=\"text\"\r\n                  className={`form-control ${!validTitle ? 'is-invalid' : 'is-valid'}`}\r\n                  placeholder=\"Título del evento\"\r\n                  name=\"title\"\r\n                  autoComplete=\"off\"\r\n                  value={ title }\r\n                  onChange={ handleInputChange }\r\n              />\r\n              <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n              <textarea\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Notas\"\r\n                  rows=\"5\"\r\n                  name=\"notes\"\r\n                  value={ notes }\r\n                  onChange={ handleInputChange }\r\n              ></textarea>\r\n              <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n          </div>\r\n\r\n          <button\r\n              type=\"submit\"\r\n              className=\"btn btn-outline-primary btn-block\"\r\n          >\r\n              <i className=\"far fa-save\"></i>\r\n              <span> Guardar</span>\r\n          </button>\r\n      </form>\r\n    </Modal>\r\n  )\r\n}\r\n","import moment from 'moment';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { eventClearActive, eventSetActive, eventStartLoad } from '../../actions/events';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { calendarLangEs } from '../../helpers/calendar-lang-es';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\nimport { Navbar } from '../ui/Navbar'\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\n\r\nimport 'moment/locale/es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\nmoment.locale('es');\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const { uid } = useSelector(state => state.auth)\r\n\r\n  const { events, activeEvent } = useSelector(state => state.calendar);\r\n\r\n  const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n  const dobleClickEvent = (e) => {\r\n    dispatch(uiOpenModal());\r\n  }\r\n\r\n  const selectedEvent = (e) => {\r\n    dispatch(eventSetActive(e));\r\n  }\r\n\r\n  const viewChange = (e) => {\r\n    setLastView(e);\r\n    localStorage.setItem('lastView', e);\r\n  }\r\n\r\n  const onSelectedSlot = (e) => {\r\n    dispatch(eventClearActive());\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(eventStartLoad());\r\n  }, [dispatch])\r\n\r\n  const eventStyleGetter = (event, start, end, isSelected) => {\r\n    const style = {\r\n      backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\r\n      borderRadius: '0px',\r\n      opacity: '0.8',\r\n      color: 'white',\r\n      display: 'block'\r\n    }\r\n    return {style};\r\n  }\r\n  return (\r\n    <div className=\"calendar-screen\">\r\n      <Navbar/>\r\n      <h1>CalendarScreen</h1>\r\n      <Calendar\r\n        localizer={ localizer }\r\n        events={ events }\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        messages={ calendarLangEs }\r\n        eventPropGetter={ eventStyleGetter }\r\n        onDoubleClickEvent={ dobleClickEvent }\r\n        onSelectEvent={ selectedEvent }\r\n        onSelectSlot={ onSelectedSlot }\r\n        selectable={ true }\r\n        onView={ viewChange }\r\n        view={ lastView }\r\n        components={{ event: CalendarEvent }}\r\n      />\r\n\r\n      <CalendarModal/>\r\n\r\n      {\r\n        activeEvent && <DeleteEventFab />\r\n      }\r\n\r\n      <AddNewFab />\r\n    </div>\r\n  )\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({ isLogged, component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest} component={\r\n        (props) => (\r\n          (isLogged)\r\n            ? <Component {...props} />\r\n            : <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n  isLogged: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({ isLogged, component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest} component={\r\n        (props) => (\r\n          (isLogged)\r\n            ? (<Redirect to=\"/\" />)\r\n            : (<Component {...props} />)\r\n        )\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n  isLogged: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect, BrowserRouter as Router, Switch } from 'react-router-dom';\r\n\r\nimport { startTokenRenew } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n  const dispatch = useDispatch();\r\n  const { checking, uid } = useSelector(state => state.auth)\r\n\r\n  useEffect(() => {\r\n    dispatch(startTokenRenew());\r\n  }, [dispatch]);\r\n\r\n  if(checking) return (<h3>wait...</h3>);\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <PublicRoute\r\n            exact\r\n            path=\"/login\"\r\n            component={LoginScreen}\r\n            isLogged={ !!uid }\r\n          />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/\"\r\n            component={CalendarScreen}\r\n            isLogged={ !!uid }\r\n          />\r\n\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  checking: true,\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.authLogin:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        checking: false\r\n      }\r\n\r\n    case types.authStartRegister:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        checking: false\r\n      }\r\n\r\n    case types.authStartTokenRenew:\r\n      return {\r\n        ...state,\r\n        checking: false,\r\n      }\r\n\r\n    case types.authLogout:\r\n      return {\r\n        checking: false,\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import { types } from '../types/types';\r\n\r\n const initialState = {\r\n   events: [],\r\n   activeEvent: null\r\n\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.eventSetActive:\r\n      return {\r\n        ...state,\r\n        activeEvent: action.payload\r\n      }\r\n\r\n    case types.eventAddNew:\r\n      return {\r\n        ...state,\r\n        events: [...state.events, action.payload]\r\n      }\r\n\r\n    case types.eventUpdated:\r\n      return {\r\n        ...state,\r\n        events: state.events.map(event => event.id === action.payload.id ? action.payload : event)\r\n      }\r\n\r\n    case types.eventDeleted:\r\n      return {\r\n        ...state,\r\n        events: state.events.filter(event => event.id !== state.activeEvent.id),\r\n        activeEvent: null\r\n      }\r\n\r\n    case types.eventClearActive:\r\n      return {\r\n        ...state,\r\n        activeEvent: null\r\n      }\r\n\r\n    case types.eventStartLoad:\r\n      return {\r\n        ...state,\r\n        events: [...action.payload]\r\n      }\r\n\r\n    case types.eventClearState:\r\n      return {\r\n        ...initialState\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  openModal: false,\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.uiOpenModal:\r\n      return {\r\n        ...state,\r\n        openModal: true\r\n      }\r\n    case types.uiCloseModal:\r\n      return {\r\n        ...state,\r\n        openModal: false\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer';\r\n\r\nexport const rootReducer = combineReducers(\r\n  {\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer,\r\n  }\r\n);\r\n","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport { AppRouter } from './router/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const CalendarApp = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <AppRouter/>\r\n    </Provider>\r\n  )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}